// .wrapper{}
.total {
  background: var(--total-bg);
  display: flex;
  justify-content: space-between;
  color: var(--total-text);
  margin: 16px;
  border-radius: var(--button-radius);
  padding: 0 16px;
  > li {
    padding: 16px;
    display: flex;
    flex-direction: column;
    text-align: center;
    &:first-child {
      color: var(--total-income);
    }
    &:nth-child(2) {
      color: var(--total-expenses);
    }
  }
}
.list {
  > li {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    border-bottom: 1px solid var(--button-border-color);
    padding: 12px 16px;
  }
  .sign {
    flex-grow: 0;
    flex-shrink: 0;
    width: 48px;
    height: 48px;
    border-radius: 50%;
    background: var(--tag-bg);
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 0 8px;
  }
  .text {
    margin-right: 4px;
    margin-left: 4px;
    flex-grow: 1;
    flex-shrink: 1;
    .tagAndAmount {
      display: flex;
      justify-content: space-between;
      .tag {
        color: var(--list-tag-text);
      }
      .amount {
        color: var(--list-amount-text);
      }
    }
    .time {
      color: var(--list-time-text);
      margin-top: 4px;
    }
  }
}
.more {
  padding: 32px 16px;
  text-align: center;
}
// 从 StartPage.tsx 的 scss 移入
.button {
  width: 100%; //当 width: 100%; 和 margin同时存在时，元素将会直接超出屏幕右侧。解决办法：加上一个容器，并将原本button拥有的外边距，改为该容器的内边距
  &_wrapper {
    // & 在此处代表 .button ，在需要统一修改前半段相同的class时非常方便
    padding: 16px 16px;
  }
}
.pig {
  width: 128px;
  height: 128px;
  &_wrapper {
    //由于左右是居中的，因此Center的padding只需要加上下高度
    //注：如果有时间可以在StartPage最下面再加一个Center组件，并取消这个padding，使Button组件能灵活居中
    padding: 120px 0;
  }
}
